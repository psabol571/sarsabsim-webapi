openapi: 3.0.0
servers:
  - description: Hospital Management Endpoint
    url: /api
info:
  description: Hospital Management system for Web-In-Cloud
  version: "1.0.0"
  title: Hospital Management Api
  contact:
    email: xsabol@stuba.sk
  license:
    name: CC BY 4.0
    url: "https://creativecommons.org/licenses/by/4.0/"
tags:
- name: departments
  description: Hospital departments management
- name: beds
  description: Hospital beds management
- name: patients
  description: Patients management
  
paths:
  "/departments":
    get:
      tags:
        - departments
      summary: Get all departments
      operationId: getDepartments
      description: Returns list of all hospital departments
      responses:
        "200":
          description: List of departments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Department"
        "501":
          description: Not implemented
    post:
      tags:
        - departments
      summary: Create new department
      operationId: createDepartment
      description: Create a new hospital department
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Department"
        description: Department details to create
        required: true
      responses:
        "201":
          description: Department created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Department"
        "400":
          description: Invalid request body
        "409":
          description: Department already exists

  "/departments/{departmentId}":
    get:
      tags:
        - departments
      summary: Get department by ID
      operationId: getDepartment
      description: Get details of a specific department
      parameters:
        - in: path
          name: departmentId
          description: Department ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Department details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Department"
        "404":
          description: Department not found
    put:
      tags:
        - departments
      summary: Update department
      operationId: updateDepartment
      description: Update an existing department
      parameters:
        - in: path
          name: departmentId
          description: Department ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Department"
        description: Updated department details
        required: true
      responses:
        "200":
          description: Department updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Department"
        "400":
          description: Invalid request body
        "404":
          description: Department not found
    delete:
      tags:
        - departments
      summary: Delete department
      operationId: deleteDepartment
      description: Delete a department
      parameters:
        - in: path
          name: departmentId
          description: Department ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Department deleted
        "404":
          description: Department not found

  "/departments/{departmentId}/beds":
    get:
      tags:
        - beds
      summary: Get beds by department
      operationId: getBedsByDepartment
      description: Get list of beds for a specific department
      parameters:
        - in: path
          name: departmentId
          description: Department ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of beds in department
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bed"
        "404":
          description: Department not found

  "/beds":
    get:
      tags:
        - beds
      summary: Get all beds
      operationId: getBeds
      description: Returns list of all beds
      responses:
        "200":
          description: List of beds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bed"
    post:
      tags:
        - beds
      summary: Create new bed
      operationId: createBed
      description: Create a new bed
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bed"
        description: Bed details to create
        required: true
      responses:
        "201":
          description: Bed created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bed"
        "400":
          description: Invalid request body
        "409":
          description: Bed already exists

  "/beds/{bedId}":
    get:
      tags:
        - beds
      summary: Get bed by ID
      operationId: getBed
      description: Get details of a specific bed
      parameters:
        - in: path
          name: bedId
          description: Bed ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Bed details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bed"
        "404":
          description: Bed not found
    put:
      tags:
        - beds
      summary: Update bed
      operationId: updateBed
      description: Update an existing bed
      parameters:
        - in: path
          name: bedId
          description: Bed ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bed"
        description: Updated bed details
        required: true
      responses:
        "200":
          description: Bed updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bed"
        "400":
          description: Invalid request body
        "404":
          description: Bed not found
    delete:
      tags:
        - beds
      summary: Delete bed
      operationId: deleteBed
      description: Delete a bed
      parameters:
        - in: path
          name: bedId
          description: Bed ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Bed deleted
        "404":
          description: Bed not found

  "/patients":
    get:
      tags:
        - patients
      summary: Get all patients
      operationId: getPatients
      description: Returns list of all patients
      responses:
        "200":
          description: List of patients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Patient"
    post:
      tags:
        - patients
      summary: Create new patient
      operationId: createPatient
      description: Create a new patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Patient"
        description: Patient details to create
        required: true
      responses:
        "201":
          description: Patient created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
        "400":
          description: Invalid request body
        "409":
          description: Patient already exists

  "/patients/{patientId}":
    get:
      tags:
        - patients
      summary: Get patient by ID
      operationId: getPatient
      description: Get details of a specific patient
      parameters:
        - in: path
          name: patientId
          description: Patient ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Patient details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
        "404":
          description: Patient not found
    put:
      tags:
        - patients
      summary: Update patient
      operationId: updatePatient
      description: Update an existing patient
      parameters:
        - in: path
          name: patientId
          description: Patient ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Patient"
        description: Updated patient details
        required: true
      responses:
        "200":
          description: Patient updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
        "400":
          description: Invalid request body
        "404":
          description: Patient not found
    delete:
      tags:
        - patients
      summary: Delete patient
      operationId: deletePatient
      description: Delete a patient
      parameters:
        - in: path
          name: patientId
          description: Patient ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Patient deleted
        "404":
          description: Patient not found

  "/patients/{patientId}/hospitalizations":
    post:
      tags:
        - patients
      summary: Add hospitalization record
      operationId: addHospitalizationRecord
      description: Add a new hospitalization record to a patient
      parameters:
        - in: path
          name: patientId
          description: Patient ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HospitalizationRecord"
        description: Hospitalization record to add
        required: true
      responses:
        "201":
          description: Hospitalization record added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
        "400":
          description: Invalid request body
        "404":
          description: Patient not found

  "/patients/{patientId}/hospitalizations/{recordId}":
    put:
      tags:
        - patients
      summary: Update hospitalization record
      operationId: updateHospitalizationRecord
      description: Update a hospitalization record
      parameters:
        - in: path
          name: patientId
          description: Patient ID
          required: true
          schema:
            type: string
        - in: path
          name: recordId
          description: Hospitalization record ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HospitalizationRecord"
        description: Updated hospitalization record
        required: true
      responses:
        "200":
          description: Hospitalization record updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
        "400":
          description: Invalid request body
        "404":
          description: Patient or record not found
    delete:
      tags:
        - patients
      summary: Delete hospitalization record
      operationId: deleteHospitalizationRecord
      description: Delete a hospitalization record
      parameters:
        - in: path
          name: patientId
          description: Patient ID
          required: true
          schema:
            type: string
        - in: path
          name: recordId
          description: Hospitalization record ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Hospitalization record deleted
        "404":
          description: Patient or record not found

components:
  schemas:
    Department:
      type: object
      required:
        - name
        - floor
      properties:
        id:
          type: string
          description: Unique identifier
        name:
          type: string
          description: Department name
          example: "Kardiológia"
        description:
          type: string
          description: Department description
          example: "Oddelenie kardiológie"
        floor:
          type: integer
          description: Floor number
          example: 3
        capacity:
          $ref: "#/components/schemas/DepartmentCapacity"
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
    
    DepartmentCapacity:
      type: object
      properties:
        maximum_beds:
          type: integer
          description: Maximum number of beds
          example: 20
        actual_beds:
          type: integer
          description: Actual number of beds available
          example: 18
        occupied_beds:
          type: integer
          description: Number of currently occupied beds
          example: 10
    
    Bed:
      type: object
      required:
        - department_id
        - bed_type
      properties:
        id:
          type: string
          description: Unique identifier
        department_id:
          type: string
          description: Department ID where bed is located
        bed_type:
          type: string
          description: Type of bed
          example: "standard"
        bed_quality:
          type: number
          format: double
          description: Quality rating (0.0 - 1.0)
          example: 0.8
        status:
          $ref: "#/components/schemas/BedStatus"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    
    BedStatus:
      type: object
      properties:
        patient_id:
          type: string
          description: Patient ID if bed is occupied
        description:
          type: string
          description: Status description
          example: "available"
    
    Patient:
      type: object
      required:
        - first_name
        - last_name
        - birth_date
        - gender
      properties:
        id:
          type: string
          description: Unique identifier
        first_name:
          type: string
          description: Patient first name
          example: "Mária"
        last_name:
          type: string
          description: Patient last name
          example: "Svobodová"
        birth_date:
          type: string
          description: Birth date
          example: "1985-03-15"
        gender:
          type: string
          description: Gender
          example: "F"
        phone:
          type: string
          description: Phone number
          example: "+421902345678"
        email:
          type: string
          description: Email address
          example: "maria.svobodova@email.sk"
        hospitalization_records:
          type: array
          items:
            $ref: "#/components/schemas/HospitalizationRecord"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    
    HospitalizationRecord:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier
        description:
          type: string
          description: Hospitalization description
          example: "Hospitalizácia pre infekčnú chorobu" 